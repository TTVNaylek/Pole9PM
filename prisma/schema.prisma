// Schema file for tests by Kelyan Desmet

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  group    Groupes? @relation(fields: [groupId], references: [id]) // Relation avec Groupes
  groupId  String?
  email    String   @unique
  name     String
  password String

  UserToken UserToken[]
  salt      String

  otp_enabled  Boolean @default(false)
  otp_verified Boolean @default(false)

  otp_ascii    String?
  otp_hex      String?
  otp_base32   String?
  otp_auth_url String?

  @@map(name: "Users")
}

model UserToken {
  id     String @id @default(uuid())
  userID String @unique
  token  String
  user   User   @relation(fields: [userID], references: [id], onDelete: Cascade)

  @@map(name: "UserToken")
}

model Services {
  id          String @id @default(uuid())
  serviceName String
  email       String
  password    String
  salt        String

  @@map(name: "Services")
}

model Groupes {
  id            String  @id @default(uuid())
  GroupName     String  @unique
  A2F           Boolean
  ViewLOS       Boolean
  ViewIDs       Boolean
  ViewPsswAge   Boolean
  CopyPassw     Boolean
  MngMembers    Boolean
  MngGrp        Boolean
  MngMembersGrp Boolean
  MngServices   Boolean
  HstrySrvUsed  Boolean
  User          User[]

  @@map(name: "Groupes")
}
